{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lucky_drws\\\\Lotterry\\\\src\\\\Visitor\\\\Components\\\\Navbar\\\\elements\\\\DarkMode.jsx\",\n    _s = $RefreshSig$();\n\nfunction cov_g4i1ci7vl() {\n  var path = \"D:\\\\Lucky_drws\\\\Lotterry\\\\src\\\\Visitor\\\\Components\\\\Navbar\\\\elements\\\\DarkMode.jsx\";\n  var hash = \"17f6ed971df815752d664fc2316700cf1a73f4f0\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"D:\\\\Lucky_drws\\\\Lotterry\\\\src\\\\Visitor\\\\Components\\\\Navbar\\\\elements\\\\DarkMode.jsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 7,\n          column: 43\n        },\n        end: {\n          line: 7,\n          column: 67\n        }\n      },\n      \"1\": {\n        start: {\n          line: 8,\n          column: 16\n        },\n        end: {\n          line: 8,\n          column: 45\n        }\n      },\n      \"2\": {\n        start: {\n          line: 9,\n          column: 21\n        },\n        end: {\n          line: 9,\n          column: 55\n        }\n      },\n      \"3\": {\n        start: {\n          line: 10,\n          column: 2\n        },\n        end: {\n          line: 14,\n          column: 3\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"DarkMode\",\n        decl: {\n          start: {\n            line: 6,\n            column: 9\n          },\n          end: {\n            line: 6,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 6,\n            column: 20\n          },\n          end: {\n            line: 15,\n            column: 1\n          }\n        },\n        line: 6\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 12,\n            column: 24\n          },\n          end: {\n            line: 12,\n            column: 98\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 12,\n            column: 56\n          },\n          end: {\n            line: 12,\n            column: 74\n          }\n        }, {\n          start: {\n            line: 12,\n            column: 77\n          },\n          end: {\n            line: 12,\n            column: 98\n          }\n        }],\n        line: 12\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 12,\n            column: 24\n          },\n          end: {\n            line: 12,\n            column: 53\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 12,\n            column: 24\n          },\n          end: {\n            line: 12,\n            column: 29\n          }\n        }, {\n          start: {\n            line: 12,\n            column: 33\n          },\n          end: {\n            line: 12,\n            column: 53\n          }\n        }],\n        line: 12\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 12,\n            column: 101\n          },\n          end: {\n            line: 12,\n            column: 326\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 12,\n            column: 110\n          },\n          end: {\n            line: 12,\n            column: 216\n          }\n        }, {\n          start: {\n            line: 12,\n            column: 219\n          },\n          end: {\n            line: 12,\n            column: 326\n          }\n        }],\n        line: 12\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"17f6ed971df815752d664fc2316700cf1a73f4f0\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_g4i1ci7vl = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_g4i1ci7vl();\nimport React, { useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { ThemeContext } from '../../../Context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DarkMode() {\n  _s();\n\n  cov_g4i1ci7vl().f[0]++;\n  const [{\n    theme,\n    isDark\n  }, toggleTheme] = (cov_g4i1ci7vl().s[0]++, useContext(ThemeContext));\n  const token = (cov_g4i1ci7vl().s[1]++, localStorage.getItem('token'));\n  const CheckToken = (cov_g4i1ci7vl().s[2]++, localStorage.getItem('CheckToken'));\n  cov_g4i1ci7vl().s[3]++;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: (cov_g4i1ci7vl().b[1][0]++, token) && (cov_g4i1ci7vl().b[1][1]++, token === CheckToken) ? (cov_g4i1ci7vl().b[0][0]++, 'paddingWhenLogin') : (cov_g4i1ci7vl().b[0][1]++, 'paddingWhenNotLogin'),\n      children: isDark ? (cov_g4i1ci7vl().b[2][0]++, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleTheme,\n        className: \"mt-2 pe-3 faMoon zoom icon\",\n        icon: faSun,\n        fontSize: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 111\n      }, this)) : (cov_g4i1ci7vl().b[2][1]++, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleTheme,\n        className: \"mt-2 pe-3 faMoon zoom icon\",\n        icon: faMoon,\n        fontSize: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 220\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DarkMode, \"qGQN1YtEFFEhMsilEXhGGmXHjLA=\");\n\n_c = DarkMode;\nexport default DarkMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["React","useContext","FontAwesomeIcon","faMoon","faSun","ThemeContext","DarkMode","theme","isDark","toggleTheme","token","localStorage","getItem","CheckToken"],"sources":["D:/Lucky_drws/Lotterry/src/Visitor/Components/Navbar/elements/DarkMode.jsx"],"sourcesContent":["import React, {useContext} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { ThemeContext } from '../../../Context/ThemeContext';\n\nfunction DarkMode() {\n    const [{theme, isDark}, toggleTheme] = useContext(ThemeContext);\n  const token = localStorage.getItem('token')\n  const CheckToken = localStorage.getItem('CheckToken')\n  return (\n    <div>\n        <div className={token && token === CheckToken ? 'paddingWhenLogin' : 'paddingWhenNotLogin'}>{isDark ? <FontAwesomeIcon onClick={toggleTheme} className='mt-2 pe-3 faMoon zoom icon' icon={faSun} fontSize={30}/> : <FontAwesomeIcon onClick={toggleTheme} className='mt-2 pe-3 faMoon zoom icon' icon={faMoon} fontSize={30}/>}</div>\n    </div>\n  )\n}\n\nexport default DarkMode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;;;;;;;;;AAfZ,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mCAA9B;AACA,SAASC,YAAT,QAA6B,+BAA7B;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAAA;EAChB,MAAM,CAAC;IAACC,KAAD;IAAQC;EAAR,CAAD,EAAkBC,WAAlB,6BAAiCR,UAAU,CAACI,YAAD,CAA3C,CAAN;EACF,MAAMK,KAAK,4BAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,CAAX;EACA,MAAMC,UAAU,4BAAGF,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAH,CAAhB;EAHkB;EAIlB,oBACE;IAAA,uBACI;MAAK,SAAS,EAAE,4BAAAF,KAAK,iCAAIA,KAAK,KAAKG,UAAd,CAAL,+BAAgC,kBAAhC,gCAAqD,qBAArD,CAAhB;MAAA,UAA6FL,MAAM,4CAAG,QAAC,eAAD;QAAiB,OAAO,EAAEC,WAA1B;QAAuC,SAAS,EAAC,4BAAjD;QAA8E,IAAI,EAAEL,KAApF;QAA2F,QAAQ,EAAE;MAArG;QAAA;QAAA;QAAA;MAAA,QAAH,6CAAgH,QAAC,eAAD;QAAiB,OAAO,EAAEK,WAA1B;QAAuC,SAAS,EAAC,4BAAjD;QAA8E,IAAI,EAAEN,MAApF;QAA4F,QAAQ,EAAE;MAAtG;QAAA;QAAA;QAAA;MAAA,QAAhH;IAAnG;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GATQG,Q;;KAAAA,Q;AAWT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}