{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lucky_drws\\\\Lotterry\\\\src\\\\Visitor\\\\Components\\\\Navbar\\\\elements\\\\NavLinks.jsx\",\n    _s = $RefreshSig$();\n\nfunction cov_2pbcmvjdj0() {\n  var path = \"D:\\\\Lucky_drws\\\\Lotterry\\\\src\\\\Visitor\\\\Components\\\\Navbar\\\\elements\\\\NavLinks.jsx\";\n  var hash = \"ef1525fea8cd2c1bce08a47aeb5668fd7d844b13\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"D:\\\\Lucky_drws\\\\Lotterry\\\\src\\\\Visitor\\\\Components\\\\Navbar\\\\elements\\\\NavLinks.jsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 6,\n          column: 2\n        },\n        end: {\n          line: 16,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 22,\n          column: 23\n        },\n        end: {\n          line: 22,\n          column: 42\n        }\n      },\n      \"2\": {\n        start: {\n          line: 23,\n          column: 19\n        },\n        end: {\n          line: 23,\n          column: 71\n        }\n      },\n      \"3\": {\n        start: {\n          line: 24,\n          column: 2\n        },\n        end: {\n          line: 30,\n          column: 3\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"NavLinks\",\n        decl: {\n          start: {\n            line: 5,\n            column: 9\n          },\n          end: {\n            line: 5,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 20\n          },\n          end: {\n            line: 17,\n            column: 1\n          }\n        },\n        line: 5\n      },\n      \"1\": {\n        name: \"CustomLink\",\n        decl: {\n          start: {\n            line: 21,\n            column: 9\n          },\n          end: {\n            line: 21,\n            column: 19\n          }\n        },\n        loc: {\n          start: {\n            line: 21,\n            column: 48\n          },\n          end: {\n            line: 31,\n            column: 1\n          }\n        },\n        line: 21\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 26,\n            column: 31\n          },\n          end: {\n            line: 26,\n            column: 55\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 26,\n            column: 42\n          },\n          end: {\n            line: 26,\n            column: 50\n          }\n        }, {\n          start: {\n            line: 26,\n            column: 53\n          },\n          end: {\n            line: 26,\n            column: 55\n          }\n        }],\n        line: 26\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"ef1525fea8cd2c1bce08a47aeb5668fd7d844b13\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2pbcmvjdj0 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2pbcmvjdj0();\nimport React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link, useMatch, useResolvedPath } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavLinks() {\n  cov_2pbcmvjdj0().f[0]++;\n  cov_2pbcmvjdj0().s[0]++;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      className: \"Nav\",\n      style: {\n        height: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/luckydraw\",\n        children: \"\\u0EAB\\u0E99\\u0EC9\\u0EB2\\u0EAB\\u0EA5\\u0EB1\\u0E81\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/luckydraw/Random\",\n        children: \"\\u0EAB\\u0E99\\u0EC9\\u0EB2\\u0EAA\\u0EB8\\u0EC8\\u0EA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/luckydraw/Candidate\",\n        children: \"\\u0EA5\\u0EB2\\u0E8D\\u0E8A\\u0EB7\\u0EC8\\u0E9C\\u0EB9\\u0EC9\\u0EA1\\u0EB5\\u0EAA\\u0EB4\\u0E94\\u0EAA\\u0EB8\\u0EC8\\u0EA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/luckydraw/Winner\",\n        children: \"\\u0E9C\\u0EB9\\u0EC9\\u0EC2\\u0E8A\\u0E81\\u0E94\\u0EB5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/luckydraw/About\",\n        children: \"\\u0E81\\u0EC8\\u0EBD\\u0EA7\\u0E81\\u0EB1\\u0E9A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NavLinks;\nexport default NavLinks;\n\nfunction CustomLink(_ref) {\n  _s();\n\n  let {\n    to,\n    children,\n    ...props\n  } = _ref;\n  cov_2pbcmvjdj0().f[1]++;\n  const resolvedPath = (cov_2pbcmvjdj0().s[1]++, useResolvedPath(to));\n  const isActive = (cov_2pbcmvjdj0().s[2]++, useMatch({\n    path: resolvedPath.pathname,\n    end: true\n  }));\n  cov_2pbcmvjdj0().s[3]++;\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      className: `item ${isActive ? (cov_2pbcmvjdj0().b[0][0]++, \"active\") : (cov_2pbcmvjdj0().b[0][1]++, \"\")}`,\n      to: to,\n      ...props,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomLink, \"Dfq6KH74NsOUUXPzETtO7DGllew=\", false, function () {\n  return [useResolvedPath, useMatch];\n});\n\n_c2 = CustomLink;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavLinks\");\n$RefreshReg$(_c2, \"CustomLink\");","map":{"version":3,"names":["React","Nav","Link","useMatch","useResolvedPath","NavLinks","height","CustomLink","to","children","props","resolvedPath","isActive","path","pathname","end"],"sources":["D:/Lucky_drws/Lotterry/src/Visitor/Components/Navbar/elements/NavLinks.jsx"],"sourcesContent":["import React from 'react'\nimport Nav from 'react-bootstrap/Nav';\nimport { Link, useMatch, useResolvedPath } from 'react-router-dom'\n\nfunction NavLinks() {\n  return (\n    <div>\n      <Nav className='Nav' style={{ height: \"auto\" }}>\n        <CustomLink to='/luckydraw'>ຫນ້າຫລັກ</CustomLink>\n        <CustomLink to='/luckydraw/Random'>ຫນ້າສຸ່ມ</CustomLink>\n        <CustomLink to='/luckydraw/Candidate'>ລາຍຊື່ຜູ້ມີສິດສຸ່ມ</CustomLink>\n        <CustomLink to='/luckydraw/Winner'>ຜູ້ໂຊກດີ</CustomLink>\n        <CustomLink to='/luckydraw/About'>ກ່ຽວກັບ</CustomLink>\n      </Nav>\n    </div>\n  )\n}\n\nexport default NavLinks\n\nfunction CustomLink({ to, children, ...props }) {\n  const resolvedPath = useResolvedPath(to)\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true })\n  return (\n    <Nav>\n      <Link className={`item ${isActive ? \"active\" : \"\"}`} to={to} {...props}>\n        {children}\n      </Link>\n    </Nav>\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;;;;;;;;;AAfZ,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,eAAzB,QAAgD,kBAAhD;;;AAEA,SAASC,QAAT,GAAoB;EAAA;EAAA;EAClB,oBACE;IAAA,uBACE,QAAC,GAAD;MAAK,SAAS,EAAC,KAAf;MAAqB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAV,CAA5B;MAAA,wBACE,QAAC,UAAD;QAAY,EAAE,EAAC,YAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QAAY,EAAE,EAAC,mBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,UAAD;QAAY,EAAE,EAAC,sBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,UAAD;QAAY,EAAE,EAAC,mBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,UAAD;QAAY,EAAE,EAAC,kBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;KAZQD,Q;AAcT,eAAeA,QAAf;;AAEA,SAASE,UAAT,OAAgD;EAAA;;EAAA,IAA5B;IAAEC,EAAF;IAAMC,QAAN;IAAgB,GAAGC;EAAnB,CAA4B;EAAA;EAC9C,MAAMC,YAAY,6BAAGP,eAAe,CAACI,EAAD,CAAlB,CAAlB;EACA,MAAMI,QAAQ,6BAAGT,QAAQ,CAAC;IAAEU,IAAI,EAAEF,YAAY,CAACG,QAArB;IAA+BC,GAAG,EAAE;EAApC,CAAD,CAAX,CAAd;EAF8C;EAG9C,oBACE,QAAC,GAAD;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAG,QAAOH,QAAQ,gCAAG,QAAH,iCAAc,EAAd,CAAiB,EAAlD;MAAqD,EAAE,EAAEJ,EAAzD;MAAA,GAAiEE,KAAjE;MAAA,UACGD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAVQF,U;UACcH,e,EACJD,Q;;;MAFVI,U"},"metadata":{},"sourceType":"module"}